# OGEM Integration Test Configuration
# Copy this file to .env and fill in your API credentials
# Note: .env files should be gitignored and never committed to version control

# Enable integration tests (required)
OGEM_INTEGRATION_TESTS=true

# OpenAI Configuration
OPENAI_API_KEY=
# Example: sk-proj-abcdef123456...

# Anthropic Claude Configuration  
ANTHROPIC_API_KEY=
# Example: sk-ant-api03-abcdef123456...

# Google/Vertex AI Configuration
GOOGLE_API_KEY=
# Example: AIzaSyAbc123def456...
# Or for service account authentication:
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# Azure OpenAI Configuration
AZURE_OPENAI_API_KEY=
AZURE_OPENAI_ENDPOINT=
AZURE_OPENAI_DEPLOYMENT=
# Example: 
# AZURE_OPENAI_API_KEY=1234567890abcdef...
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_DEPLOYMENT=gpt-35-turbo

# AWS Bedrock Configuration (Optional)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
# Example:
# AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
# AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# Cohere Configuration (Optional)
COHERE_API_KEY=
# Example: co-1234567890abcdef...

# Hugging Face Configuration (Optional)
HUGGINGFACE_API_KEY=
# Example: hf_abcdef123456...

# Groq Configuration (Optional)
GROQ_API_KEY=
# Example: gsk_abcdef123456...

# Mistral Configuration (Optional)
MISTRAL_API_KEY=
# Example: abcdef123456...

# OpenRouter Configuration (Optional)
OPENROUTER_API_KEY=
# Example: sk-or-v1-abcdef123456...

# xAI Configuration (Optional)
XAI_API_KEY=
# Example: xai-abcdef123456...

# Test Configuration (Optional - for controlling test behavior)
# Set to specific provider names to test only those providers
# Example: TEST_PROVIDERS=openai,anthropic
TEST_PROVIDERS=

# Test timeout (optional, default is 5 minutes)
TEST_TIMEOUT=5m

# Test model overrides (optional)
# Use these to specify which models to test for each provider
OPENAI_TEST_MODEL=gpt-4o
ANTHROPIC_TEST_MODEL=claude-3.5-haiku-20241022
GOOGLE_TEST_MODEL=gemini-2.5-flash

# Rate limiting (optional - add delays between tests)
TEST_RATE_LIMIT_DELAY=1s

# Spending protection (optional - skip expensive tests)
SKIP_EXPENSIVE_TESTS=true